<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring 
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- Configures the @Controller programming model -->  
    <mvc:annotation-driven />
	
	<util:properties id="config" location="classpath:property/properties.xml"/>

	<!-- resources 선언 -->
	<mvc:resources mapping="/resource/**" location="/resource/" />

	<!-- annotation base scan 선언  -->
	<context:component-scan base-package="com.resttemplate." />

	<!-- Sample
	<context:component-scan base-package="com.piyoro.spring">
        <context:include-filter type="regex" expression="com\.piyoro\.spring\..*Dao.*" />
        <context:include-filter type="regex" expression="com\.piyoro\.spring\..*Service.*" />
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
	 -->
	<!-- 
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass">
			<value>
				org.springframework.web.servlet.view.tiles2.TilesView
			</value>
		</property>
	</bean>
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath:tiles/tiles-defs.xml</value>
			</list>
		</property>
	</bean>
	 -->
	
<!-- ViewResolver 설정 
-->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	    <property name="order" value="1" />
	    <property name="mediaTypes">
	        <map>
	            <entry key="json" value="application/json" />
	            <entry key="jsonp" value="javascript/jsonp" />
	            <entry key="xml" value="application/xml"/>
	        </map>
	    </property>
	    <property name="defaultViews">
	        <list>
	            <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
	            <bean class="com.resttemplate.common.util.JSONPView">
	                <property name="contentType" value="javascript/jsonp"/>
	            </bean>
	            <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
	            	<constructor-arg>
	            		<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	            			<property name="classesToBeBound">
	            				<list>
	            					<value>com.resttemplate.rejoiceAPI.bean.Message</value>
	            				</list>
	            			</property>
	            		</bean>
	            	</constructor-arg>
	            </bean>
	            <!-- 
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean class="com.resttemplate.rejoiceAPI.bean.Message">
							<property name="autodetectAnnotations" value="true" />
						</bean>
					</property>
				</bean>
	             -->
	        </list>
	    </property>
	    <property name="ignoreAcceptHeader" value="true" />
	</bean>
	<!-- 맵핑되는 확장자가 없을때 JSP 로 뷰 처리 
	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	    <property name="order" value="2" />
	    <property name="prefix" value="/WEB-INF/jsp/"/>
	    <property name="suffix" value=".jsp"/>
	    <property name="cache" value="false" />
	</bean>

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.FormHttpMessageConverter">
	                <property name="charset">
		                <bean class="java.nio.charset.Charset" factory-method="forName">
		                	<constructor-arg value="UTF-8"/>
	                	</bean>
                	</property>
                </bean>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
			  		<property name="supportedMediaTypes" value="application/json" />
				</bean>
			</list>
		</property>
	</bean>

	 
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
		<property name="maxUploadSize" value="52428800" />
	</bean>

	<bean id="beanNameResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0"/> 
	</bean>

	<bean id="jsonView" class="com.resttemplate.common.util.JSonView">
		<property name="contentType" value="text/html;charset=UTF-8"></property>
	</bean>
</beans>